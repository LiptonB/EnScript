class MainClass;

class FindEvidenceDialogClass: DialogClass {
  MainClass Main;
  PathEditClass EvidenceDirectoryEdit;
  ListEditClass ListEdit;
  DirRootClass DirRoot;

  FindEvidenceDialogClass(DialogClass parent, MainClass main) :
    DialogClass(parent, "Evidence Selection Dialog"),
    Main = main,
    EvidenceDirectoryEdit(this, "Evidence directory", START, START, 200, 12, 0, main.EvidenceDirectory, FOLDEROPEN),
    ListEdit(this, "Files in directory", START, NEXT, 200, 75, 0, main.FileList, ContextClass::CANCHECK),
    DirRoot(LocalMachine)
  {}

  virtual void ChildEvent(const EventClass &evt) {
    DialogClass::ChildEvent(evt);
    if (EvidenceDirectoryEdit.Matches(evt)) {
      String newPath = EvidenceDirectoryEdit.GetText();
      DirectoryClass dir();
      NameListClass FileList();
      if (DirRoot.GetListing(newPath, dir)) {
        foreach (DirectoryClass file in dir) {
          new NameListClass(FileList, file.FullPath());
        }
      }
      ListEdit.SetDataRoot(FileList);
      Main.FileList = FileList;
    }
  }
}

class MainClass {
  String EvidenceDirectory;
  NameListClass FileList;

  MainClass() :
    FileList()
  {}

  void Main(CaseClass c) {

    FindEvidenceDialogClass diag(null, this);

    if (!c) {
      diag.ErrorMessage("Please open a case first");
      return;
    }

    if (diag.Execute() == SystemClass::OK) {
      Console.WriteLine("Path selected: " + EvidenceDirectory);
      foreach(NodeClass node in FileList) {
        if (node.IsSelected()) {
          Console.WriteLine("Selected File: " + node.Name());
        }
      }
    }

    foreach (NodeClass node in FileList) {
      if (node.IsSelected()) {
        String filename = EvidenceDirectory +
          (EvidenceDirectory.SubString(EvidenceDirectory.GetLength() - 1, 1) == "\\" ? "" : "\\") +
          node.Name();
        EvidenceClass ev(null, node.Name());
        EvidencePathClass evPath(ev.EvidencePathRoot(), filename);
        EvidenceOpenClass evOpen();
        String extension = filename.GetFileExt();
        if (extension == "img") {
          ev.SetOpenMode(EvidenceClass::OPENRAWIMAGE);
        } else if (extension == "E01") {
          ev.SetOpenMode(EvidenceClass::OPENEVIDENCEFILE);
        } else {
          Console.WriteLine("Skipping " + filename + " - unknown extension");
          continue;
        }
        if (ev.AddToCase(c, evOpen)) {
          Console.WriteLine("Added " + filename + " to case successfully");
        } else {
          Console.WriteLine("Could not add " + filename + " to case");
        }
      }
    }
  }
}
